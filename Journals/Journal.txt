
=====================================Week 1 Class 1=========================================
This week we focused on leaning how to work with Git and git hub.

Github is a website which can be used to manage code. 
Using git we can upload our code, divide our code into different sections and merge code branchs together.
Once we are finished working on our code we can commit and push it to github which stores the code and allows other github users
to see and possibly contribute to the code.

Github hub also funtions as a sort of social network for programers. Many programers use github to network with others in the 
industry or as a CV for job interviews. Github hub tracks how much a user interacts with the site/ how much they contribute to 
repostories. This activity tracking allow potential employers to see how the user works. Activity tracking also allows users to
form bounds with each other letting them effectively social network.

Git and by extention github let users manage there code though branching. A branch is a copy of a set of code which can be
work on without effecting the main piece of code. Branchs can be created form a branch and more than one branch can be created
at a time. 

Branching allows multiple programers to all work on a piece of code at the same time. Multiple people can each have their
own branchs allowing them to not have to work about other users overriding the work they have completed.

This journal is late as I made a mistake when first trying to commit it and manage to select my documents folder as both the source and destanation 
of my commits this resault in Visual studio code and git breaking and me having to install a third party software to uninstall any
residual files. 


=====================================Week 1 Class 2=========================================

During the first week of this class we learnt about the various git commands which we will need to complete the git/github porsion of this assignment.
The first step to using git for verson controll is to add cridentails.
git config --global user.email "hello@example.com" this is an example of the command to do this.
In my case I had to do this twice once for username and once for email.
The next step is to create and naviagate to a folder which can be used as a repository.
Next we have to use the 'git clone "URL from git hub"' command to get the files from github.
After the changes were complete we needed to create a new branch which 'git checkout -b "Name Of New branch"'.
After this we had to use the 'git add "fileName.extention"' to select the file(s) we wanted to commit.
Next we used the 'git commit -m "Message"' TO Commit the the changes and add a comment to the commit.
Finally we used 'git push origin "Target Branch"' to send the changes to github.

An alternate thing we learnt this week is how to merge branchs together. 
The process work by creating multipe branchs navagating to one and them using 'git merge "other branch name"' to merge the two.
This funtion allows us to be able to work on small parts of a project indevidually and then have them all fuse together once they
are finished.

=====================================Week 2 Class 1=========================================


This week we have started learning about web design. 
As of the first lession we have look at storyboards, userstories and wire frames.

Our teacher walked us though the importance of planning a document and how once we are in the industry we will be required to 
forfill multiple rolls basied on what is needed. This means that it is important ro be able to do all of the different rolls in
web development. Wireframes are an important part of the web development as it allows the developers to have something to show their
client and have that client be satified. One of the way that we were show to do this is by paper prototypes. Paper prototypes are when
you hand draw a design, this has many benifits, including not having to creating anything meaning that if the client does not like 
the design the time spent develping it isn't as wasted. Clients are have also been described in a way which makes me think they are 'decision challanged' meaning that they will make bad decision
at inapporate times, for example a client may not feel like they could ask for changes if you have already stated with the website
by with paper prototypes the client could "screw them up and throw them away" allowing them to make changes as they see fit. 
Additionally client ask for additions and changes though out the project having the distintion that you can change the paper thing 
but not the work I have already done helps create boundries for the client.

Storyboards and usecase descriptions allow as to have examples of how we expect our users to intereact which the website which can
also be explained to the client or used to find oversights. 

So good advice we got from this lession includes.
Never start at a start up, they will expect you to do everything and wont provide mentorship like a large company will.
All way start at a job for more than a year or else it will rasies flags with future employers.
If a client 'has an idea' explain to them how much it would cost to get them to drop that idea.

=====================================Week 2 Class 2=========================================

For the second leason we were meant to create a site basied on the framework we designed in the first leasson of the week.
I was assigned to the CSS of the website which was a struggle as one of the other members of the team added a css template which 
somehow still overright my changes after I started making changes that accally work I manage to loses them once I started merging.
I managed to merge a few times with some success but after I tryied to merge back to the master, my changes were removed eventho
I though I had told It not to over right that part of the code.

One of the main things that I learned was how to pull repor after I had already downloaded I once. Once selecting the correct branch
The pull command will allow me to gain anychanges to that repor. I also learnt how to approve merges on Github as it was repuired
to work with the website. As I ran into difficulties near the end of the lesson I might need to looked into and pratice merging 
document so I wont make the mistake I made again.

=====================================Week 3 Class 1=========================================

For the first class of this week were disscused the differen types of frame works and markup langauges their are and how
popular they are. This is both interesting and important as i might want to pick langauges which are popular or in high demand.

We also disscused basic JS funtions, they are simlar to other programming langauges, just like other langauges JS has it's own differences
for example number is less regid than in other langauges. This sort of thing is important as all langauges has their own syntac and
understanding that is key to understanding the langauges.

Were also covered equal and not equal statements in JS we use === or !== for java script which is different from other programing
langauges which just use == and !=.

=====================================Week 3 Class 2=========================================

For the second leson we talked about the differences between if statements and switch statements.

The operator || is JS verson of or which is usefull to know as I have a tendance to create large complex and or statments.
Is is important to combin statements like this or you would need to create many nested statements which is one of the first things
I learnt I wasn't meant to do when starting this corse.

I don't realy understand error funtions but I will look into it as it seems important to be able to prevent errors in my code so I
Should look into it latter.


Funtions in JS are very simlar to what I am use to and are called simlarly to MySQL funtions. I should look for some differences 
SO That I don't make error or increct assumtions.

=====================================Week 1 Class 1=========================================

I have decided on my project. For this class I will make a genirect product web site which allows small businesses to advitise there
products. The website will allow people who don't have have websites of their own can eaierly advitise online as well as people who
want to find the product they want.


We started this class with the highlevel discription of a basic discription of the product. We went over a basic diagram and with 
basic terminoligy for the use of a web app. We have cover this in a previous leason by this discription made it made more scense to
me. Being able to discuse a project in the most basic terms is important when it comes to talking to clients as client might get lost
if they don't understand what you are trying to communicate. This is an important skill for me to learn as I struggle to clearly 
explain my point and to give the necisery details.


=====================================Class 8=========================================

I struggling to understand what express.js is. I believe that express is a code liberay built on node.js, it's most important feature
is how it is customisable. Node.js is a liberary which allow for webcommunications. The node.js is allows for connections between servers
and other computers by creating conections called sockets, which is a cocept that I am struggling to understand but I think that this
might be a little advance for where I currenetly am at. How I understand is that Javascript can communicate with the hardware of a server
so node.js allows for translation between the two.

Note: I called node,js and express.js liberaies they are actually frameworks.

While using code libariaries it is important to make sure that they are up to date before they become an important part of you app.
This can be done by using github to check how active the repository is when, howmany issue their are and when it was last updated.
The reason only using currently manatained code is important is that if the code is not being mantained error and issues will occure
and wont be resolved. It is also important to find work arounds for issues as the people updating the repository might not resolve issues
straight away.

=====================================Class 9=========================================

I don't understand this so this will need to be re-writting{ *

Just to some techniqual issues I was late to class. I entered class and was encountered by the discussion of using express.js to code
we were going over the next() command which lets a program move onto the next peice of code which is useful after something like
an if statement. We also covered use, req and res which is what I missed so I will need to figure out what this mean at someother time.

How I believe that this works is that when the code needs to take a responce from the internet we use req to get the resault and
when we want to respond to it we use res.

We also covered the term middle where which is used to discribe the the action which take place between the requests of the user and
the responces of the system, I think I'm not really sure. 

The next funtion moves to the next action amoung the middleare.

We also talked about app.use and app.get which are used to load the funtions such as req and res from express.js.

The different from app.use and app.get is that the app.use doesn't need to querry/recieve information. Where app.get go and retrieves
information.


We also covered router which I do not understand but they seem important.

I think that this will make more sense once I try and use it, I should look up some tutorial to try it out.

app.listin allows us to specifie what to listen for to run the code. app.listen opens a port allowing the use to tap into it to access
the code which has been set up for the user to run.

Remainber:
Require statement
middleare
route

}


=====================================Class 10=========================================

During this lesion we covered the differents between javascript classes, funtions and propts. These are called components.

Funtions are basic they allow for code to be quickly ran and don't clutter your code like a class will. Funtions are consider stateless as they
only have the ability to run their code and don't remember any of the other funtions.
Classes are more complicated than Funtions have additionl features such as storing varables. As they store varable they are considered stateful
Although some people might recommend not using classes out teach does as it is extremely useful to be able to take advantages of classes
Propts are components which have the ability to store data and that is it. They can be passed to classes and used to more around data.

Examples:
Funtion: preform a spicific equation.
Classes: preform an equation basied on it's state
Propts: pass a value into classes to be added.


We covered how to take advantage of react parent child relationships. This was something that I took advantage of for milestone one.
A react componed can be placed within another component and then that component can be called from the root.
This allows us to be able to render multiple components at the sametime. I currently am not sure how to properly load a component 
after a piece of child code. For example I would like to have my header and footer on every page and then content inbetween but I 
don't know how to load the footer with out loading it as a child as well. I will need to look into this in the future, I believe that
it has some relation to boiler plates so that might be a place to look into.

We covered differnet types of styling. Inline styles are bad and I will not consider using them. I am currently using a css file
but there is an additional type of file which I might want to look into doing. Style components allow us to download style tempaltes
and applie them to each components, this is simlar to an inline style but doesn't have a lot of the downsides to inline styles.

I might look into this as I am not good at web designs so this could help me make my website more polished looking. It also prevents
me from forgeting an interferrinh tag which could coarse issues, which is a common problem I have.

Another example is CSS in javascript which lets us write CSS in javascript. This isn't popular as it can add a large amount of code
to the project, but it allows for a large amount of work to be preformed at once.

=====================================Class 11=========================================

This week we started with git class room. During this we used the new tool to learn about the React life cycle.

The react life cycle contains 5 different mainly used methods.

Constructor
render
componentDidMount
componentWillumount
componentDidUpdate


There are more lifecycles that this exept these are the only one which are commonly used.

Each component runs at a different type during the lifecylce of a compent.

Constructor are ran before the compent is mounted and lets the user set up things such as the state of objects and eventbinds.
Constructor are limited as too what they can do as there code takes place before the component is mount and therefore doesn't
have a state yet.

Render is the only composirey part of a class. Render is the main part of the code and render what the compent is ment to render.
Render can not be used to diffectly influent the state of the compent or to directly interact with the browser.

componentDidMount will be ran directly after the code was mounted and therefore can be used to set up things like subscriptions.

compoentDidUpdate is ran when the compent is updated in someway. By using the this we can invoke code after a change is made allowing 
us to be able to re-render the compent after anything is changed.

commpentWillUnMount lets us run any code that is needed before the compented is umounted and distroyed.

Knowledge of the life cycle react allows us to fully take advantage of how react compoents rendercode allowing us to be able to 
have certain bits of code rendered at certain times.


=============================================Class ???=========================================


MVC vs Flux


Model view controller has a large number of brunchs which it has to manage many views and models per controller and they are all linked.

This can make the 


===========================================1/11==========================================

This lession I was sick.

Accourding to the class we when over a tutorial about how to implement Redux.
Many of my class mate had issues getting the tutorial to work but their is an example provided by the tutor which apparently works better.

I will need to go over this tutorial in my own time.




============================================6/11================================================

Today in class we compaired the Redux cycle to an insurance company.
Person goes to AA with a for which 

Redux cycle:

Action Creation => Client
Action => Form
Dispatch => Front Desk
Reducers 
State

When designing redux we have to focus on Action creation and action as these will decide how we handle the creation.


When were use redux we are updating a single array this is important to remenber as it is commonally believe that the 
redux funtions are constantly creating new array. When creating the array we must use '[]' so the reducer knows what we are trying to create.

After creating the reducer we then preform an action based on what type of requests is being passed.

When naming action type the standard is to have the title being all caps with an underscore and not a dash.

We have the choice between switch and if statments, however major developers avoid switch the reason for this is unknown. I may need to look in to
the reason for this as my inclination is to use switch statments but if they is a spicific reason to avoid this it would be best that I do.

'.filter' can take an error funtion and can take out an item from an array and check the rest of the array. After this point the filtered name is gonefrom
the array. This many be useful for my project to remove unvalid enteies in my tables such as if a menu is deleted. I should look into more about this as
I am unsure how it works fully and I only a have a ruffe understanding of why this would be useful.

After creating all of the reducers we then combine them. 
Redux allows us to remover much of the state from our react components. This is extrmenly important as the parsing of infomraiton is what is creating
a lot of my issues as well as limiting what I can currently implement. The ability to be able to manage infomraiton in the way redux does
will allow me to manage things such as 

================================================8/11==========================================================


This class we went over two examples for a redux based log in system.

The first example let us log in with test test and the second let us register and delete accounts.
This is simlar to what I wish to do with my web app. I wish to have a log in screen which changes which companants are deisplayed where 
only a log in user can see and edit menus for the busness the manage this is a good starting point.

While we were trying to get the exmaples too work we had a few errors:

We needed to use npm i -g react-scripts@latest to install the approprate packetages for the program too run.
The program had used a config file which was empty, to fix this we had to remove any mention of it from the files in the program.

I think on my site it would best to place the log in place of any editational panals with the registration button taking the user to a new page.

The code in the examples is simalar to that which is used with our restful api.
 But it is slightly different and in other places it doesn't seem the same.

 One large part of this project is it uses a false back end which is something I don't understand and will proberly need to look into to
 properly understand my program.

